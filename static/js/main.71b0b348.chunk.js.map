{"version":3,"sources":["logo.svg","comp/Graph.js","comp/Main.js","comp/Company_Graph.js","comp/Company.js","comp/Service_Pie.js","comp/Service.js","App.js","reportWebVitals.js","index.js"],"names":["Graph","d","useState","gData","setGdata","console","log","useEffect","className","data","keys","indexBy","margin","top","right","bottom","left","padding","valueScale","type","indexScale","round","valueFormat","format","enabled","colors","scheme","defs","id","background","color","size","stagger","rotation","lineWidth","spacing","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","labelSkipWidth","labelSkipHeight","labelTextColor","legends","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","on","style","Main","subject","Corona","DATA","setData","tit","DESCRIPTION","push","onChange","e","filter","day","target","value","map","k","border","dataView","App","AreaChart","width","height","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","Tooltip","Area","stroke","Company","sort","Description","sor","setSor","v","srt","el","PieGraph","List","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","itemTextColor","symbolShape","Service","all","city","setCity","dataChange","getAttribute","onClick","to","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71b0b348.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","//Graph.js\r\nimport { useEffect, useState } from \"react\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport \"../App.css\";\r\n// import Datagraph from \"../data/datagraph.json\"; \r\n// import Corona from \"../data/corona19.json\";\r\n\r\n\r\nexport default function  Graph({d}){\r\n\r\n    let [gData, setGdata] = useState(d);\r\n    console.log(d);\r\n\r\n    //1차 접종자 FIR_INC, FIR_INC1 (lower letter)\r\n    //2차 접종자 SCD_INC, SCD_INC1 (lower letter)\r\n    useEffect( ()=>{          \r\n        //useState랑 같이 사용 \r\n        // console.log(d)\r\n        setGdata (\r\n            [\r\n                {\r\n                    \"country\": \"1차 접종자\",\r\n                    \"hot dog\": d[0]['fir_inc'],\r\n                    \"burger\": d[0]['fir_inc1']\r\n                },\r\n                {     \r\n                    \"country\": \"2차 접종자\",\r\n                    \"hot dog\": d[0]['scd_inc'],\r\n                    \"burger\": d[0]['scd_inc1']\r\n                }\r\n            ]\r\n        );\r\n        \r\n    },[d]);\r\n    //d가 바뀌면 실행하겠다\r\n\r\n\r\n    return (\r\n        <div className=\"graph\">\r\n            <ResponsiveBar\r\n                    data={gData}\r\n                    keys={[ 'hot dog','burger']}\r\n                    indexBy=\"country\"\r\n                    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n                    padding={0.3}\r\n                    valueScale={{ type: 'linear' }}\r\n                    indexScale={{ type: 'band', round: true }}\r\n                    valueFormat={{ format: '', enabled: false }}\r\n                    colors={{ scheme: 'nivo' }}\r\n                    defs={[\r\n                        {\r\n                            id: 'dots',\r\n                            type: 'patternDots',\r\n                            background: 'inherit',\r\n                            color: '#38bcb2',\r\n                            size: 4,\r\n                            padding: 1,\r\n                            stagger: true\r\n                        },\r\n                        {\r\n                            id: 'lines',\r\n                            type: 'patternLines',\r\n                            background: 'inherit',\r\n                            color: '#eed312',\r\n                            rotation: -45,\r\n                            lineWidth: 6,\r\n                            spacing: 10\r\n                        }\r\n                    ]}\r\n                    fill={[\r\n                        {\r\n                            match: {\r\n                                id: 'fries'\r\n                            },\r\n                            id: 'dots'\r\n                        },\r\n                        {\r\n                            match: {\r\n                                id: 'sandwich'\r\n                            },\r\n                            id: 'lines'\r\n                        }\r\n                    ]}\r\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: '코로나 예방접종 현황',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: 32\r\n                    }}\r\n                    axisLeft={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: 'food',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: -40\r\n                    }}\r\n                    labelSkipWidth={12}\r\n                    labelSkipHeight={12}\r\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    legends={[\r\n                        {\r\n                            dataFrom: 'keys',\r\n                            anchor: 'bottom-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 120,\r\n                            translateY: 0,\r\n                            itemsSpacing: 2,\r\n                            itemWidth: 100,\r\n                            itemHeight: 20,\r\n                            itemDirection: 'left-to-right',\r\n                            itemOpacity: 0.85,\r\n                            symbolSize: 20,\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n            />\r\n        </div>\r\n    );\r\n \r\n\r\n}\r\n","// import { ResponsiveBar } from '@nivo/bar';\r\nimport { useState } from \"react\";\r\nimport Corona from \"../data/corona19.json\";\r\nimport Graph from \"./Graph\"; \r\n//경로는 본 사이트기준으로\r\n\r\n\r\nexport default function Main(){\r\n\r\n    // console.log(Corona.DESCRIPTION);\r\n    // console.log(Corona.DATA);\r\n    // console.log(Corona.DATA[1].scd_inc);\r\n    let subject = [];\r\n    let [data, setData] = useState(Corona.DATA);\r\n    for(let tit in Corona.DESCRIPTION){\r\n        // console.log(tit)\r\n        // console.log(Corona.DESCRIPTION[tit])\r\n        subject.push(Corona.DESCRIPTION[tit]);\r\n    }\r\n\r\n    function dataChange(e){\r\n        // console.log( window.day.value )\r\n        // console.log(e.target.value)\r\n        setData( Corona.DATA.filter(day => (day['s_vc_dt'] == e.target.value)) );\r\n        console.log(data);\r\n    }\r\n    \r\n    \r\n\r\n\r\n\r\n   \r\n\r\n\r\n    return(\r\n        <>\r\n            <section>\r\n                <h2>코로나 예방접종 현황</h2>\r\n                <div>\r\n                    <select id=\"day\" onChange={dataChange}>\r\n                        {\r\n                            Corona.DATA.map( function(data,k){\r\n                                return (\r\n                                        <option key={k}>{data['s_vc_dt']}</option>\r\n                                )\r\n                            } )\r\n                        }\r\n                    </select>\r\n                </div>\r\n                <table border=\"1\">\r\n                    <thead>\r\n                        <tr>\r\n                            {\r\n                                subject.map( function(tit,k){\r\n                                return <th key={k}>{tit}</th>\r\n                                } )\r\n                            }\r\n                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                            {\r\n                                data.map( function(dataView,k){\r\n                                return (\r\n                                        <tr key={k}>\r\n                                            <td>{dataView['scd_inc']}</td>\r\n                                            <td>{dataView['fir_inc1']}</td>\r\n                                            <td>{dataView['fir_inc_rate']}</td>\r\n                                            <td>{dataView['scd_inc1']}</td>\r\n                                            <td>{dataView['s_vc_dt']}</td>\r\n                                            <td>{dataView['scd_inc_rate']}</td>\r\n                                            <td>{dataView['fir_inc']}</td>\r\n                                            <td>{dataView['fir_sub']}</td>\r\n                                        </tr>\r\n                                    )\r\n                                } )\r\n                            }\r\n                    </tbody>\r\n                </table>\r\n            </section>\r\n            <Graph d={data}/>\r\n        </>\r\n    )\r\n}","import Corona from \"../data/corona19.json\";\r\nimport React from \"react\";\r\nimport {AreaChart,Area,XAxis,YAxis,CartesianGrid,Tooltip} from \"recharts\";\r\n\r\n// https://recharts.org/en-US/examples/CustomizedLabelLineChart \r\n//???????????????이걸로 다른거 해보고 왜 안되는지 알아보기\r\nexport default function App({d}) {\r\n\r\n  let data = Corona.DATA;\r\n  // console.log(data[0]['scd_inc']);\r\n\r\n  return (\r\n    <AreaChart\r\n      width={2000}\r\n      height={400}\r\n      data={data}\r\n      margin={{\r\n        top: 10,\r\n        right: 30,\r\n        left: 0,\r\n        bottom: 0\r\n      }}\r\n    >\r\n      <CartesianGrid strokeDasharray=\"3 3\" />\r\n      <XAxis dataKey=\"s_vc_dt\" />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Area \r\n        type=\"monotone\" \r\n        dataKey={d}\r\n        stroke=\"#8884d8\" \r\n        fill=\"#8884d8\" \r\n      />\r\n    </AreaChart>\r\n  );\r\n}","// Company.js\r\nimport \"../Company.css\";\r\nimport Corona from \"../data/corona19.json\";\r\nimport Graph from \"./Company_Graph\";\r\n// import Graph2 from \"./Company_Graph2\";\r\nimport { useState } from \"react\";\r\n\r\n\r\n\r\nexport default function Company(){\r\n\r\n    // console.log(Corona.DATA[0]);\r\n    let subject=[];  //Corona.DESCRIPTION 리스트를 []안에 묶기위해서 for in문과 함께쓰임\r\n    let sort = [\"scd_inc\",\"fir_inc1\",\"fir_inc_rate\",\"scd_inc1\",\"s_vc_dt\",\"scd_inc_rate\",\"fir_inc\",\"fir_sub\"]\r\n    let Description = Corona.DESCRIPTION;\r\n    let data = Corona.DATA;\r\n    let [sor, setSor] = useState(sort[0])\r\n    for(let tit in Description){\r\n        subject.push(Description[tit]);\r\n        // console.log(tit);  //SCD_INC, FIR_INC1 이렇게 올라오고\r\n    }\r\n    // console.log(subject)를하면 2차접종누계, 당일 1차접종자 수 가 나온다.\r\n    function dataChange(e){\r\n        // console.log( Description[sort[0]] )  >>2차 접종누계\r\n\r\n        // console.log(e.target.value);\r\n        let srt = sort.filter(el => Description[el] == e.target.value);\r\n        setSor( srt[0])\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>백신접종 통계자료</h2>\r\n            <ul className=\"today\">\r\n                {\r\n                    subject.map(function(v,k){\r\n                        return (\r\n                            <li key={k}>\r\n                                <p>{v}</p>\r\n                                <p>1234</p>\r\n                            </li>\r\n                        )\r\n\r\n                    })\r\n                }\r\n            </ul>\r\n            <div className=\"data\">\r\n                <select className=\"select\" onChange={dataChange}>\r\n                    {\r\n                        subject.map(function(v,k){\r\n                            return(\r\n                                <option key={k}>{v}</option>\r\n                            )\r\n                        })\r\n                    }\r\n                </select>\r\n                <div className=\"line_graph\">\r\n                    <Graph d={sor}/>\r\n                </div>\r\n                <div className=\"shape_graph\">\r\n                    {/* <Graph2 /> */}\r\n                </div>\r\n            </div>\r\n        \r\n        </div>\r\n\r\n    )\r\n}","import { ResponsivePie } from '@nivo/pie';\r\nimport List from \"../data/city.json\";\r\n\r\n\r\nexport default function PieGraph({d}){\r\n\r\n    // console.log(List.d);\r\n    // let city = List.Seoul;\r\n    // console.log(city);\r\n\r\n    return(\r\n        <ResponsivePie\r\n            data={List[d]}\r\n            margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n            innerRadius={0.5}\r\n            padAngle={0.7}\r\n            cornerRadius={3}\r\n            activeOuterRadiusOffset={8}\r\n            borderWidth={1}\r\n            borderColor={{ from: 'color', modifiers: [ [ 'darker', 0.2 ] ] }}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLinkLabelsTextColor=\"#fff\"\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: 'color' }}\r\n            arcLabelsSkipAngle={10}\r\n            arcLabelsTextColor={{ from: 'color', modifiers: [ [ 'darker', 2 ] ] }}\r\n            defs={[\r\n                {\r\n                    id: 'dots',\r\n                    type: 'patternDots',\r\n                    background: 'rgb(97, 162, 248)',\r\n                    color: 'rgba(97, 162, 248, 0.5)',\r\n                    size: 0,\r\n                    padding: 1,\r\n                    stagger: true\r\n                },\r\n                {\r\n                    id: 'lines',\r\n                    type: 'patternLines',\r\n                    background: 'inherit',\r\n                    color: 'rgba(230, 42, 198, 0.3)',\r\n                    rotation: -45,\r\n                    lineWidth: 6,\r\n                    spacing: 10\r\n                }\r\n            ]}\r\n            fill={[\r\n                {\r\n                    match: {\r\n                        id: 'man'\r\n                    },\r\n                    id: 'dots'\r\n                },\r\n                {\r\n                    match: {\r\n                        id: 'woman'\r\n                    },\r\n                    id: 'lines'\r\n                }\r\n            ]}\r\n            legends={[\r\n                {\r\n                    anchor: 'bottom',\r\n                    direction: 'row',\r\n                    justify: false,\r\n                    translateX: 0,\r\n                    translateY: 56,\r\n                    itemsSpacing: 0,\r\n                    itemWidth: 100,\r\n                    itemHeight: 18,\r\n                    itemTextColor: '#fff',\r\n                    itemDirection: 'left-to-right',\r\n                    itemOpacity: 1,\r\n                    symbolSize: 20,\r\n                    symbolShape: 'circle',\r\n                    effects: [\r\n                        {\r\n                            on: 'hover',\r\n                            style: {\r\n                                itemTextColor: '#fff'\r\n                            }\r\n                        }\r\n                    ]\r\n                }\r\n            ]}\r\n        />\r\n    );\r\n    \r\n\r\n}\r\n\r\n","// service.js\r\nimport { useState } from \"react\";\r\nimport List from \"../data/city.json\";\r\nimport \"../Service.css\";\r\nimport { ResponsiveBar } from '@nivo/bar';\r\nimport PieGraph from \"./Service_Pie\";\r\n\r\n\r\nexport default function Service(){\r\n\r\n    // console.log(List.all['city']); //korea\r\n    let all = List.all;\r\n    let [city, setCity] = useState(all[0]['city']);\r\n    // console.log(all[0]['city'])  >>서울\r\n\r\n    function dataChange(e){\r\n        setCity(e.target.getAttribute('data-key'));\r\n        // console.log(e.target.getAttribute('data-key'));\r\n        \r\n    }\r\n    // console.log(List[city]);\r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>Where is my city? (Click your city)</h2>\r\n            <div className=\"box\">\r\n                {\r\n                    all.map( function(v,k){\r\n                        return (\r\n                            <div key={k} className=\"city\" >\r\n                                <p>{v['country']}</p>\r\n                                <p data-key={v['city']} onClick={dataChange}>{v['city']}</p>\r\n                                <p>{v['population']}</p>\r\n                            </div>\r\n                        )\r\n                            \r\n                    })\r\n                }\r\n            </div>\r\n            <div className=\"box_bar\">\r\n                <ResponsiveBar\r\n                    className=\"bar\"\r\n                    data={all}\r\n                    keys={[ 'population']}\r\n                    indexBy=\"city\"\r\n                    margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n                    padding={0.3}\r\n                    valueScale={{ type: 'linear' }}\r\n                    indexScale={{ type: 'band', round: true }}\r\n                    valueFormat={{ format: '', enabled: false }}\r\n                    colors={{ scheme: 'nivo' }}\r\n                    borderColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    axisTop={null}\r\n                    axisRight={null}\r\n                    axisBottom={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: 'city',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: 32\r\n                    }}\r\n                    axisLeft={{\r\n                        tickSize: 5,\r\n                        tickPadding: 5,\r\n                        tickRotation: 0,\r\n                        legend: 'population',\r\n                        legendPosition: 'middle',\r\n                        legendOffset: -40\r\n                    }}\r\n                    labelSkipWidth={12}\r\n                    labelSkipHeight={12}\r\n                    labelTextColor={{ from: 'color', modifiers: [ [ 'darker', 1.6 ] ] }}\r\n                    legends={[\r\n                        {\r\n                            dataFrom: 'keys',\r\n                            anchor: 'bottom-right',\r\n                            direction: 'column',\r\n                            justify: false,\r\n                            translateX: 120,\r\n                            translateY: 0,\r\n                            itemsSpacing: 2,\r\n                            itemWidth: 100,\r\n                            itemHeight: 20,\r\n                            itemDirection: 'left-to-right',\r\n                            itemOpacity: 0.85,\r\n                            symbolSize: 20,\r\n                            effects: [\r\n                                {\r\n                                    on: 'hover',\r\n                                    style: {\r\n                                        itemOpacity: 1\r\n                                    }\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]}\r\n                />\r\n            </div>\r\n            <div className=\"box_pie\">\r\n                <PieGraph d={city}/>\r\n            </div>\r\n            \r\n\r\n            \r\n        </>\r\n    )\r\n}","import logo from './logo.svg';\nimport './App.css';\nimport Main from './comp/Main';\nimport{BrowserRouter, Route, Switch, Link} from \"react-router-dom\";\n//★★★★★★★★★★★★★★★★★★   Route 할때 npm i ~~~ 설치 필수\nimport Company from './comp/Company';\nimport Service from './comp/Service';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <header className=\"header\">\n        <Link className=\"nav\" to=\"/\">HOME</Link>\n        <Link className=\"nav\" to=\"/company\">COMPANY</Link>\n        <Link className=\"nav\" to=\"/service\">SERVICE</Link>\n      </header>\n      <Switch>\n        <Route exact path=\"/\"><Main /></Route> \n        <Route path=\"/company\"><Company /></Route> \n        <Route path=\"/service\"><Service /></Route> \n      </Switch> \n    </BrowserRouter>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}